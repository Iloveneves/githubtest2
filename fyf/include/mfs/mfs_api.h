/**************************************************************

author:szhy

create time:080513

description:内存文件系统

**************************************************************/
#ifndef __MFS_API_H_
#define __MFS_API_H_
/**************************************************************
基本类型定义
**************************************************************/
typedef signed int MFS_HANDLE;
/**************************************************************
获取内存文件系统的版本号
**************************************************************/
char * MFS_API_GetVersion(void);
/**************************************************************
初始化内存文件系统
**************************************************************/
int MFS_API_Init(unsigned int memSize);
/**************************************************************
退出内存文件系统
**************************************************************/
int MFS_API_Exit(void);
/**************************************************************
打开文件,返回值
**************************************************************/
#define FILE_OPEN_FAIL	-1
/**************************************************************
打开文件,如果返回FILE_OPEN_FAIL表示打开文件失败,否则成功
**************************************************************/
MFS_HANDLE MFS_API_Open(const char *pFileName, const char *pMode);
/**************************************************************
关闭文件
**************************************************************/
int MFS_API_Close(MFS_HANDLE fileHandle);
/**************************************************************
删除文件
**************************************************************/
int MFS_API_Remove(const char *pFileName);
/**************************************************************
定位文件指针参数定义
**************************************************************/
#define MFS_SEEK_CUR         1
#define MFS_SEEK_END         2
#define MFS_SEEK_SET         0
/**************************************************************
定位文件指针返回值
**************************************************************/
#define FILE_SEEK_FAIL		 -1
/**************************************************************
定位文件指针,如果返回FILE_SEEK_FAIL表示定位文件指针失败,否则返回文件指针的位置
**************************************************************/
signed int MFS_API_Seek(MFS_HANDLE fileHandle, signed int Offset, signed int Whence);
/**************************************************************
读文件返回值
**************************************************************/
#define FILE_READ_FAIL		 -1
/**************************************************************
读文件,如果返回FILE_READ_FAIL表示读文件失败,否则返回读取的数据长度
**************************************************************/
signed int MFS_API_Read(MFS_HANDLE fileHandle, void * data, signed int dataLen);
/**************************************************************
写文件返回值
**************************************************************/
#define FILE_WRITE_FAIL		 -1
/**************************************************************
写文件,如果返回FILE_WRITE_FAIL表示写文件失败,否则返回写的数据长度
**************************************************************/
signed int MFS_API_Write(MFS_HANDLE fileHandle,const void * data, signed int dataLen);
/**************************************************************
读取文件大小返回值
**************************************************************/
#define FILE_GETSIZE_FAIL	 -1
/**************************************************************
获取文件大小,如果返回FILE_GETSIZE_FAIL表示获取文件大小失败,否则返回文件大小
**************************************************************/
signed int MFS_API_GetSize(MFS_HANDLE fileHandle);
/**************************************************************
内存文件系统的移植接口
**************************************************************/
typedef struct _tagMFS_Interface_s
{
	void * (*MFS_API_Malloc)(unsigned int size);
	void (*MFS_API_Free)(void * pointer);
	void (*MFS_API_Printf)(char * string);
} MFS_Interface_s;
typedef MFS_Interface_s * MFS_Interface_sp;
/**************************************************************
注册内存文件系统的移植接口
**************************************************************/
void MFS_API_RegisterInterface(MFS_Interface_sp pInterface);
#endif

